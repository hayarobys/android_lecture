<?xml version="1.0" encoding="utf-8"?>
<LinearLayout
	xmlns:android="http://schemas.android.com/apk/res/android"
	android:layout_width="match_parent"
	android:layout_height="match_parent"
	android:orientation="vertical"
	android:background="#9f9797">




	<ImageView
		android:layout_width="wrap_content"
		android:layout_height="wrap_content"
		android:background="#dd33ff"
		android:src="@drawable/suit04"/>

	<ImageView
		android:layout_width="wrap_content"
		android:layout_height="wrap_content"
		android:background="#0fafff"
		android:src="@drawable/abcd"
		android:adjustViewBounds="true"
		android:maxWidth="100dp"
		android:maxHeight="100dp"/>
	<!--컴파일 단계에서 미리 이미지뷰 사이즈가 정해지는건지 어쩐건지 이유는 모르겠지만,
		기본적으로 스마트폰 해상도보다 큰 이미지일 경우, 안드로이드는
		이미지뷰의 크기는 그대로 놔두면서, 이미지만 리사이징을 진행한다.
		이때 이미지뷰도 이미지 크기에 맞추어 리사이징 하고 싶다면
		android:adjustViewBounds="true" 를 이용하자. 기본값은 false


		android:maxWidth="100dp"	- 이미지의 최대폭 지정
		android:maxHeight="100dp"
	-->


	<!--
		public class BetweenDipAndPx {
			private static final float DEFAULT_DIP_DENSITY_SCALE = 1.5f;

			// px를 dip로 변환하기
			public static int DPFromPixel(int _pixel) {
				Context _context = BaseApplication.getContext();
				float _scale = context.getResources().getDisplayMetrics().density;

				return (int) (_pixel / DEFAULT_DIP_DENSITY_SCALE * _scale);
			}

			// dp를 px로 변환하기
			public static int PixelFromDP(int DP) {
				Context _context = BaseApplication.getContext();
				float _scale = _context.getResources().getDisplayMetrics().density;

				return (int) (DP / _scale * DEFAULT_DIP_DENSITY_SCALE);
			}
		}

		출처: http://jwandroid.tistory.com/118 [초보 플밍지기]
	-->

	<!--dp를 px로 변환
		px = (dp * getContext().getResources().getDisplayMetrics().density + 0.5f);
		출처: http://jwandroid.tistory.com/115 [초보 플밍지기]
	-->
	<ImageView
		android:layout_width="wrap_content"
		android:layout_height="wrap_content"
		android:background="#0fafff"
		android:src="@drawable/abcd"
		android:tint="#88ffff00"/>


</LinearLayout>
